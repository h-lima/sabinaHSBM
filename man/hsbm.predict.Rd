% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hsbm_predict.R
\name{hsbm.predict}
\alias{hsbm.predict}
\title{Generate edge/link predictions using Hierarchical Stochastic Block Model (HSBM).}
\usage{
hsbm.predict(
  hsbm_input,
  elist_i = NULL,
  method = "binary_classifier",
  verbose = TRUE,
  save_pickle = FALSE
)
}
\arguments{
\item{hsbm_input}{An object of class \code{hsbm.input} containing the necessary data and configurations for running the HSBM analysis.
A \code{logical} value indicating whether to add the number of observations per row and column to the edge list.}

\item{elist_i}{(\emph{optional, default} \code{NULL}) \cr
A \code{numeric} value specifying the index of the edge list (fold) from an \code{hsbm.input}to run predictions on. If \code{NULL}, predictions are run for all edge lists.}

\item{method}{(\emph{optional, default} \code{"binary_classifier"}) \cr
A \code{character} string specifying the method used for the HSBM prediction. Options include \code{"binary_classifier"} and \code{"full_reconstruction"}.}

\item{verbose}{(\emph{optional, default} \code{TRUE}) \cr
A \code{logical} value indicating whether to print progress messages during prediction.}

\item{save_pickle}{(\emph{optional, default} \code{FALSE}) \cr
If set to \code{TRUE} it saves pickle objects for each fold with the results from the model ran in \code{graph tool} module.}
}
\value{
An object of class \code{hsbm.predict} containing the edge/link predictions and group assignments for the specified edge lists (fold):
\itemize{
\item \code{$data} The binary bipartite \code{matrix} of input data.
\item \code{$folds} A \code{matrix} of cross-validation fold assignments for each held-out edge/link.
\item \code{$edgelist} A \code{list} of edge lists generated for each fold.
\item \code{$predictions$probs} A \code{list} where each element is a \code{data.frame} with the predicted probabilities (p) for the edges/links in the corresponding edge list, according to the HSBM model.
\item \code{$predictions$groups} A \code{list} where each element is a \code{data.frame} that contains the group assignments for each node in the network for the corresponding edge list.
\item \code{$min_dl} A \code{list} of minimum description length values for each fold.
}
}
\description{
This function performs predictions based on the HSBM for a specified edge list (or all edge lists) from an \code{hsbm.input} object.
}
\details{
\itemize{
\item The \code{hsbm_input} parameter should be an object of class \code{hsbm.input}, which includes the input data, the cross-validation folds, and corresponding edge lists.
\item The \code{elist_i} parameter allows you to specify a particular edge list to run predictions on. If not specified, predictions are run on all edge lists.
\item The \code{method} parameter defines the prediction method to be used. Currently, both \code{"binary_classifier"} (see \url{https:// #@@JMB info binary}) and \code{"full_reconstruction"} are supported.
\item The \code{verbose} parameter, when set to \code{TRUE}, enables the display of progress messages, which is useful for tracking the computation process.
\item The \code{save_pickle} parameter, when \code{TRUE} saves the model results as a python pickle file. The files are saved in the working directory as hsbm_res_foldi.pkl where i stands for the index of the fold. The pickle object is a dictionary with 5 elements. enum.....
}
}
\examples{
# Load example data and prepare input
data(dat, package = "sabinaHSBM")
myInput <- hsbm.input(data = dat, 
                      n_folds = 10, 
                      method = "binary_classifier", 
                      iter = 1000)

# Generate predictions for the prepared input
myPred <- hsbm.predict(hsbm_input = myInput)

}
\seealso{
\code{\link{hsbm.input}}
}
